#!/usr/bin/env bash

help="Search for files with \`find\` and \`grep\`. Usage:

  search [-d pathname] [-n name-pattern] [pattern] [...]

You can provide the \`-d\` and \`-n\` options more than once, and you can
provide more than one \`pattern\`.

\`search\` will traverse each \`pathname\` for any \`name-pattern\`, and then
search the content of files whose names match for any of the given
\`pattern\`(s).

If you provide no \`pathname\`, \`search\` will search the current working
directory. If you provide no \`name-pattern\`, \`search\` will search all files
under the given \`pathname\`(s) (or the current working directory). If you
provide no \`pattern\`, \`search\` will print just the matching pathnames.

The \`name-pattern\`(s) and \`pattern\`(s) are interpreted as case-insensitive
POSIX extended regular expressions."

source "$HOME"/bin/script.sh

while getopts "d:n:" o; do
  case "$o" in
  d)
    directories="${directories-}
$OPTARG"
    ;;
  n)
    if [[ -z "${name_patterns-}" ]]; then
      name_patterns="$OPTARG"
    else
      name_patterns="$name_patterns
$OPTARG"
    fi
    ;;
  *)
    usage
    ;;
  esac
done
shift $((OPTIND - 1))

directories=${directories=.}
name_patterns=${name_patterns=.}

cleanup() {
  rm "$name_patterns_file" "$content_patterns_file"
}

name_patterns_file="$(mktemp "$HOME"/search.XXXXXX)"
echo "$name_patterns" > "$name_patterns_file"

content_patterns_file="$(mktemp "$HOME"/search.XXXXXX)"
for p in "$@"; do
  echo "$p" >> "$content_patterns_file"
done

find $directories -type f -print0 |
  grep -zEi -f "$name_patterns_file" |
  if [[ ! -z "$@" ]]; then
    xargs -0 -P "$(core_count)" -n1 grep --color=auto -HEIi -f "$content_patterns_file"
  else
    xargs -0 -n1 echo
  fi || true
cleanup
