#!/usr/bin/env bash

help="Backs up files onto another volume. Usage:

  backup file
  backup vault
  backup misc"

source "$(dirname "$0")/script.sh"

cleanup() {
  rm -f /tmp/backup.* || true
  exit "$1"
}

file_directory="file:/vault/woop-backup/"
file_music_directory="file:/vault/share/music/"
vault_volume="/Volumes/vault/"
misc_volume="/Volumes/misc/"
stampfile="backup-date.txt"

synchronize() {
  rsync -av --delete --ignore-errors --exclude '*Cache*' --exclude '*CoreSimulator*' "$@" || true
}

# check_integrity() {
#   local sdb1="$(mktemp /tmp/backup.XXXXXX)"
#   cd "$1"
#   integrity db . "$sdb1" || true

#   local sdb2="$(mktemp /tmp/backup.XXXXXX)"
#   cd "$2"
#   integrity db . "$sdb2" || true

#   integrity check "$sdb1" "$sdb2" || true
# }

file() {
  synchronize "$HOME/" "$file_directory"
  synchronize /Users/Shared/music/ "$file_music_directory"
}

vault() {
  [[ -d "$vault_volume" ]] || error "$vault_volume not mounted"
  synchronize /Users/ "${vault_volume}Users/"
  udate >"${vault_volume}Users/$stampfile"
  #check_integrity /Users/ "${vault_volume}Users"
  diskutil eject "$vault_volume"
}

misc() {
  [[ -d "$misc_volume" ]] || error "$misc_volume not mounted"
  synchronize "$HOME/" "$misc_volume/"
  udate >"$misc_volume/$stampfile"
  diskutil eject "$misc_volume"
}

[[ $# -gt 0 ]] || usage
for argument in $@; do
  case "$argument" in
  file)
    file
    ;;
  vault)
    vault
    ;;
  misc)
    misc
    ;;
  *)
    usage
    ;;
  esac
done
cleanup 0
