#!/usr/bin/env bash

# shellcheck disable=SC1111,SC2034
help="This program attempts to detect file corruption. It works by calculating
checksums of files and storing them in a sorted, compressed file (a checksum
database, ckdb).

You can then use the program to check that the files have the same checksums
as before, such as to verify that a filesystem backup matches the original.

Usage:

  integrity db pathname foo.ckdb

For each pathname naming a directory, reads every regular file under the
pathname and calculates the filesâ€™ checksums. Stores the checksums and file
pathnames in either ckdb-file (if given), or pathname-[timestamp].ckdb (a sibling
of pathname).

  integrity check old.ckdb new.ckdb

Given 2 ckdb files, prints out any differences."

source "$(dirname "$0")/script.sh"

if ! which zstd >/dev/null; then
  error "this program depends on zstd; you'll need to install it"
fi
if ! which b3sum >/dev/null; then
  error "this program depends on b3sum; you'll need to install it"
fi

check() {
  [[ $# -eq 2 ]] || usage
  local old
  old="$1"
  local new
  new="$2"
  zstdcat "$old" | diff -d - <(zstdcat "$new")
}

db() {
  [[ $# -eq 2 ]] || usage
  # Turn exit-on-error off because we don't want to exit if `b3sum` can't read
  # some files.
  set +e
  set +o pipefail
  walk -t f -0 "$1" | expand -0 -a1 -j1 -- b3sum -l 16 | sort | zstd >"$2"
}

[[ $# -gt 0 ]] || usage
case "$1" in
check)
  shift
  check "$@"
  ;;
db)
  shift
  db "$@"
  ;;
*)
  usage
  ;;
esac
